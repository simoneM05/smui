{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-slot",
    "class-variance-authority",
    "clsx",
    "tailwind-merge",
    "lucide-react"
  ],
  "registryDependencies": [
    "https://raw.githubusercontent.com/simoneM05/smui/refs/heads/main/recipe/button.json"
  ],
  "files": [
    {
      "path": "registry/default/ui/button.tsx",
      "type": "registry:ui",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { Slot } from '@radix-ui/react-slot';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { cn } from '@/registry/default/lib/utils';\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center font-medium transition-colors disabled:pointer-events-none disabled:opacity-50 outline-none',\n  {\n    variants: {\n      variant: {\n        primary: 'text-primary-foreground bg-primary hover:bg-primary/40',\n        secondary: 'text-secondary-foreground bg-secondary hover:bg-secondary/40',\n        danger: 'text-destructive-foreground bg-destructive hover:bg-destructive/90',\n        invert: 'text-primary bg-transparent'\n      },\n      mode: {\n        icon: 'h-9 w-9 overflow-hidden',\n        solid: '',\n        outline: 'bg-transparent border-2',\n        dashed: 'bg-transparent text-foreground border-foreground border-2 border-dashed',\n        ghost: 'bg-transparent hover:bg-accent text-foreground hover:text-foreground/80',\n        link: 'bg-transparent text-primary/70 hover:bg-transparent underline underline-offset-4 hover:text-primary'\n      },\n      size: {\n        sm: 'h-7 px-3 text-sm',\n        md: 'h-9 px-4 text-base',\n        lg: 'h-11 px-6 text-lg'\n      },\n      shape: {\n        rounded: 'rounded-lg',\n        pill: 'rounded-full',\n        square: 'rounded-none'\n      },\n      underline: {\n        none: '',\n        hidden: 'hover:underline underline-offset-4 decoration-2',\n        solid: 'underline underline-offset-4 decoration-solid',\n        dashed: 'underline underline-offset-4 decoration-dashed decoration-2'\n      },\n      opacity: {\n        full: 'opacity-100',\n        medium: 'opacity-70 hover:opacity-80',\n        low: 'opacity-50 hover:opacity-60'\n      }\n    },\n    compoundVariants: [\n      { mode: 'outline', variant: 'primary', className: 'border-primary text-primary hover:bg-primary/10' },\n      { mode: 'outline', variant: 'secondary', className: 'border-secondary text-secondary hover:bg-secondary/10' },\n      { mode: 'outline', variant: 'danger', className: 'border-destructive text-destructive hover:bg-destructive/10' },\n      { variant: 'danger', underline: 'dashed', className: 'decoration-destructive' }\n    ],\n    defaultVariants: {\n      variant: 'primary',\n      mode: 'solid',\n      size: 'md',\n      shape: 'rounded',\n      underline: 'none',\n      opacity: 'full'\n    }\n  }\n);\n\ntype ButtonProps = React.ComponentProps<'button'> & VariantProps<typeof buttonVariants> & { asChild?: boolean };\n\nfunction Button({ className, variant, mode, size, shape, underline, opacity, asChild = false, ...props }: ButtonProps) {\n  const Comp = asChild ? Slot : 'button';\n  return <Comp data-slot='button' className={cn(buttonVariants({ variant, mode, size, shape, underline, opacity, className }))} {...props} />;\n}\n\nexport { Button, buttonVariants };"
    },
    {
      "path": "registry/default/lib/utils.ts",
      "type": "registry:lib",
      "content": "import { clsx, type ClassValue } from 'clsx'\n;import { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]): string {\nreturn twMerge(clsx(inputs));\n}\n"
    }
  ]
}
