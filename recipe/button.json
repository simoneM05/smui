{
  "name": "button",
  "type": "component",
  "dependencies": [
    "@radix-ui/react-slot",
    "class-variance-authority",
    "clsx",
    "tailwind-merge",
    "lucide-react"
  ],
  "files": [
    {
      "path": "components/ui/button.tsx",
      "content": "import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center font-medium transition-colors disabled:pointer-events-none disabled:opacity-50 outline-none\",\n  {\n    variants: {\n      variant: {\n        primary: \"text-primary-foreground bg-primary hover:bg-primary/40\",\n        secondary: \"text-secondary-foreground bg-secondary hover:bg-secondary/40\",\n        danger: \"text-destructive-foreground bg-destructive hover:bg-destructive/90\",\n        invert: \"text-primary bg-transparent\"\n      },\n      mode: {\n        icon: \"h-9 w-9 overflow-hidden\",\n        solid: \"\",\n        outline: \"bg-transparent border-2 \",\n        dashed: \"bg-transparent text-foureground border-foreground border-2 border-dashed\",\n        ghost: \"bg-transparent hover:bg-accent text-foreground hover:text-foreground/80\",\n        link: \"bg-transparent text-primary/70 hover:bg-transparent underline underline-offset-4 hover:text-primary\"\n      },\n      size: {\n        sm: \"h-7 px-3 text-sm\",\n        md: \"h-9 px-4 text-base\",\n        lg: \"h-11 px-6 text-lg\"\n      },\n      shape: {\n        rounded: \"rounded-lg\",\n        pill: \"rounded-full\",\n        square: \"rounded-none\"\n      },\n      underline: {\n        none: \"\",\n        hidden: \"hover:underline underline-offset-4 decoration-2\",\n        solid: \"underline underline-offset-4 decoration-solid\",\n        dashed: \"underline underline-offset-4 decoration-dashed decoration-2\"\n      },\n      opacity: {\n        full: \"opacity-100\",\n        medium: \"opacity-70 hover:opacity-80\",\n        low: \"opacity-50 hover:opacity-60\"\n      }\n    },\n    compoundVariants: [\n      {\n        mode: \"outline\",\n        variant: \"primary\",\n        className: \"border-primary text-primary hover:bg-primary/10\"\n      },\n      {\n        mode: \"outline\",\n        variant: \"secondary\",\n        className: \"border-secondary text-secondary hover:bg-secondary/10\"\n      },\n      {\n        mode: \"outline\",\n        variant: \"danger\",\n        className: \"border-destructive text-destructive hover:bg-destructive/10\"\n      },\n      {\n        variant: \"danger\",\n        underline: \"dashed\",\n        className: \"decoration-destructive\"\n      }\n    ],\n    defaultVariants: {\n      variant: \"primary\",\n      mode: \"solid\",\n      size: \"md\",\n      shape: \"rounded\",\n      underline: \"none\",\n      opacity: \"full\"\n    }\n  }\n);\n\ntype ButtonProps = React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean;\n  };\n\nfunction Button({\n  className,\n  variant,\n  mode,\n  size,\n  shape,\n  underline,\n  opacity,\n  asChild = false,\n  ...props\n}: ButtonProps) {\n  const Comp = asChild ? Slot : \"button\";\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(\n        buttonVariants({\n          variant,\n          mode,\n          size,\n          shape,\n          underline,\n          opacity,\n          className\n        })\n      )}\n      {...props}\n    />\n  );\n}\n\nexport { Button, buttonVariants };"
    }
  ]
}
