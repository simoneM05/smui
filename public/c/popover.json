{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "popover",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui",
    "class-variance-authority",
    "clsx",
    "tailwind-merge",
    "lucide-react"
  ],
  "registryDependencies": ["https://example.com/path/to/your/registry.json"],
  "files": [
    {
      "path": "registry/default/ui/popover.tsx",
      "type": "registry:ui",
      "content": "import * as React from 'react'; import * as PopoverPrimitive from '@radix-ui/react-popover'; import { cn } from '@/lib/utils'; function Popover({ ...props }) { return <PopoverPrimitive.Root data-slot='popover' {...props} />; } function PopoverTrigger({ ...props }) { return <PopoverPrimitive.Trigger data-slot='popover-trigger' {...props} />; } function PopoverContent({ className, align='center', sideOffset=4, ...props }) { return <PopoverPrimitive.Content data-slot='popover-content' align={align} sideOffset={sideOffset} className={cn('z-50 w-72 rounded-md border-border border bg-popover p-4 text-popover-foreground shadow-md shadow-black/5 outline-hidden data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2', className)} {...props} />; } function PopoverClose({ className, ...props }) { return <PopoverPrimitive.Close data-slot='popover-close' className={cn('absolute right-[5px] top-[5px] inline-flex size-[25px] cursor-default items-center justify-center hover:opacity-70 opacity-100', className)} {...props} />; } export { Popover, PopoverTrigger, PopoverContent, PopoverClose };"
    },
    {
      "path": "registry/default/lib/utils.ts",
      "type": "registry:lib",
      "content": "import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]): string {\n Â return twMerge(clsx(inputs));\n}\n"
    }
  ]
}
