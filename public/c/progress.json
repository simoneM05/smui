{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "progress",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui",
    "class-variance-authority",
    "clsx",
    "tailwind-merge",
    "lucide-react"
  ],
  "registryDependencies": ["https://example.com/path/to/your/registry.json"],
  "files": [
    {
      "path": "registry/default/ui/progress.tsx",
      "type": "registry:ui",
      "content": "import * as React from 'react'; import { cn } from '@/lib/utils'; import * as ProgressPrimitive from '@radix-ui/react-progress'; function Progress({ className, indicatorClassName, value, ...props }: React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root> & { indicatorClassName?: string }) { return <ProgressPrimitive.Root data-progress className={cn('h-1 w-full overflow-hidden rounded-full bg-gray-200', className)} {...props}><ProgressPrimitive.Indicator data-progress-indicator className={cn('h-full flex-1 bg-primary transition-all', indicatorClassName)} style={{ transform: `translateX(-${100 - (value || 0)}%)` }} /></ProgressPrimitive.Root>; } export { Progress };"
    },
    {
      "path": "registry/default/lib/utils.ts",
      "type": "registry:lib",
      "content": "import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]): string {\n Â return twMerge(clsx(inputs));\n}\n"
    }
  ]
}
